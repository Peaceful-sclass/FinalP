<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="wvcomunity">
	
	<!-- 게시물수확인 -->
	<select id="comunitycount" parameterType="hashmap" resultType="int">
		select count(*) from comunity c join mymember m on c.member_no=m.member_no
		<choose>
			<when test="cpdto.category == '전체'">
				<where><include refid="search"></include></where>
			</when>
			<when test="cpdto.category == '자유'">
				where category = '자유'
				<include refid="search"></include>
			</when>
			<otherwise>
				where category = 'Q&amp;A'
				<include refid="search"></include>
			</otherwise>
		</choose>
	</select>

	<!-- 게시물 조회 -->
	<select id="comunityall" parameterType="hashmap" resultType="comunityDto">
		select rnum, cm.*
				from (
					select row_number() over (order by regdate desc ) rnum, c.*,m.member_id member_id
					from comunity c join mymember m on c.member_no=m.member_no
 		<choose>
			<when test="cpdto.category == '전체'">
					<where><include refid="search"></include></where>
					) cm
				where rnum between (#{cpdto.currentPage}*#{cpdto.dataPerPage})-(#{cpdto.dataPerPage}-1) and (#{cpdto.currentPage}*#{cpdto.dataPerPage}) 
			</when>
			<when test="cpdto.category == '자유'">
					where category = '자유'
					<include refid="search"></include>
					) cm
				where rnum between (#{cpdto.currentPage}*#{cpdto.dataPerPage})-(#{cpdto.dataPerPage}-1) and (#{cpdto.currentPage}*#{cpdto.dataPerPage})				
			</when>
			<otherwise>
					where category = 'Q&amp;A'
					<include refid="search"></include>
					) cm
				where rnum between (#{cpdto.currentPage}*#{cpdto.dataPerPage})-(#{cpdto.dataPerPage}-1) and (#{cpdto.currentPage}*#{cpdto.dataPerPage})				
			</otherwise>
		</choose>
	</select>
	
	<sql id="search">
		<choose>
			<when test="search.searchsel == 'subject'">
				and title like '%'|| #{search.word, jdbcType=VARCHAR} ||'%'
			</when>
			<when test="search.searchsel == 'subjectcontent'">
				and title like '%'|| #{search.word, jdbcType=VARCHAR} ||'%' 
				and content like '%'|| #{search.word, jdbcType=VARCHAR} ||'%'
			</when>
			<when test="search.searchsel == 'writer'">
				and member_id like '%'|| #{search.word, jdbcType=VARCHAR} ||'%'
			</when>
		</choose>
	</sql>
	
	<select id="comunityone" parameterType="int" resultType="comunityDto">
		select c.cno cno, c.category category, c.title title, c.content content, c.regdate regdate, m.member_id member_id, c.views views
		from comunity c join mymember m
		on m.member_no = c.member_no
		where cno = #{cno}
	</select>
	<update id="viewsUp" parameterType="int">
		update comunity set views = ( select views from comunity where cno = #{cno} )+1 
		where cno = #{cno}
	</update>
	
	<insert id="cominsert" parameterType="comunityDto">
		insert into comunity
		values(comunityseq.nextval, #{category}, #{title}, 0, sysdate, #{member_no}, #{content} )
	</insert>
	
	<update id="comupdate" parameterType="comunityDto">
		update comunity set  category = #{category}, title = #{title}, content = #{content} 
		where cno = #{cno}
	</update>
	
	<delete id="comdelete" parameterType="int">
		delete from comunity where cno = #{cno}
	</delete>
	
	
	<!-- comment start /////////////////////////////////////////// -->
	<select id="comcmtselect" parameterType="comcommentDto" resultType="comcommentDto">
		select comcmtno, comcmtgroupno, comcmtgrpno, comcomment, regdate, cno, m.member_id member_id
		from comcomment c join mymember m	on c.member_no = m.member_no 
		where cno = #{cno}
		order by comcmtgrpno
	</select>
	
	<insert id="comcmtinsert" parameterType="comcommentDto">
		insert into comcomment
		values(comcmtseq.nextval, comcmtgroupseq.nextval, 1, #{comcomment}, sysdate, #{cno}, #{member_no})
	</insert>
	
	<update id="comcmtupdate" parameterType="comcommentDto">
		update comcomment 
		set comcomment = #{comcomment}, regdate = sysdate
		where comcmtno = #{comcmtno}
	</update>
	
	<delete id="comcmtdelete" parameterType="int">
		delete from comcomment where comcmtno = #{comcmtno}
	</delete>
	
	<insert id="comcmtanswer" parameterType="comcommentDto">
		insert into comcomment
		values(comcmtseq.nextval, 
		(select comcmtgroupno from comcomment where comcmtno = #{comcmtno}),
		(select comcmtgrpno from comcomment where comcmtno = #{comcmtno})+1,
		 #{comcomment},sysdate, #{cno}, #{member_no})
	</insert>
	
	<update id="comcmtbeforeanswer" parameterType="comcommentDto">
	<!-- update시 dto필요내용 - comcmtn,grpno,comcomment -->
		update comcomment 
		set comcmtgrpno = #{comcmtgrpno}+1
		where comcmtgroupno = (select comcmtgroupno from comcomment where comcmtno = #{comcmtno})
		and comcmtgrpno > (select comcmtgrpno from comcomment where comcmtno = #{comcmtno})
		<!-- 대소비교문법 <![CDATA[<=]]> -->
	</update>
	
	
	
	
	
	
	
	
</mapper>